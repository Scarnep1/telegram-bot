// Initialize Telegram Web App
const tg = window.Telegram.WebApp;
tg.expand();
tg.enableClosingConfirmation();

// User data
let userData = {
    id: tg.initDataUnsafe?.user?.id || '12345',
    name: tg.initDataUnsafe?.user?.first_name || '–ì–æ—Å—Ç—å',
    balance: 150,
    invitedFriends: 3,
    gamesPlayed: 12,
    totalEarned: 450
};

// Games data with referral links
const games = [
    {
        id: 1,
        name: "Hamster Kombat",
        icon: "üêπ",
        description: "–¢–∞–ø–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π",
        referralLink: "https://t.me/hamster_kombat_bot?start=ref_gamehub",
        bonus: "+1000 –º–æ–Ω–µ—Ç"
    },
    {
        id: 2,
        name: "Notcoin",
        icon: "ü™ô",
        description: "–ö–ª–∏–∫–µ—Ä —Å –º–æ–Ω–µ—Ç–∫–∞–º–∏",
        referralLink: "https://t.me/notcoin_bot?start=ref_gamehub",
        bonus: "+500 NOT"
    },
    {
        id: 3,
        name: "Blum",
        icon: "üå∏",
        description: "–§–µ—Ä–º–∞ —Ç–æ–∫–µ–Ω–æ–≤",
        referralLink: "https://t.me/blum_bot?start=ref_gamehub",
        bonus: "+1000 –æ—á–∫–æ–≤"
    },
    {
        id: 4,
        name: "Dotcoin",
        icon: "‚ö´",
        description: "–°–æ–±–∏—Ä–∞–π —Ç–æ—á–∫–∏",
        referralLink: "https://t.me/dotcoin_bot?start=ref_gamehub",
        bonus: "+500 —Ç–æ—á–µ–∫"
    },
    {
        id: 5,
        name: "Catizen",
        icon: "üê±",
        description: "–ö–æ—à–∞—á—å—è —Ñ–µ—Ä–º–∞",
        referralLink: "https://t.me/catizen_bot?start=ref_gamehub",
        bonus: "+3 –∫–æ—Ç–∏–∫–∞"
    },
    {
        id: 6,
        name: "Yescoin",
        icon: "üëç",
        description: "–°–≤–∞–π–ø–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π",
        referralLink: "https://t.me/yescoin_bot?start=ref_gamehub",
        bonus: "+1000 YES"
    }
];

// Crypto exchanges data
const cryptoExchanges = [
    {
        id: 1,
        name: "Binance",
        icon: "üü°",
        description: "–ö—Ä—É–ø–Ω–µ–π—à–∞—è –±–∏—Ä–∂–∞",
        referralLink: "https://accounts.binance.com/register?ref=GAMEHUB123",
        bonus: "10% —Å–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏"
    },
    {
        id: 2,
        name: "Bybit",
        icon: "üîµ",
        description: "–¢–æ—Ä–≥–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞",
        referralLink: "https://www.bybit.com/register?ref=GAMEHUB456",
        bonus: "$30 –±–æ–Ω—É—Å"
    },
    {
        id: 3,
        name: "OKX",
        icon: "üü¢",
        description: "–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è",
        referralLink: "https://www.okx.com/join/GAMEHUB789",
        bonus: "$50 –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π"
    },
    {
        id: 4,
        name: "Gate.io",
        icon: "üö™",
        description: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –±–∏—Ä–∂–∞",
        referralLink: "https://www.gate.io/signup/GAMEHUB012",
        bonus: "10% –∫—ç—à–±–µ–∫"
    }
];

// Initialize app
function initApp() {
    updateUserInfo();
    loadGames();
    loadCryptoExchanges();
    updateStats();
    generateReferralLink();
}

// Update user information
function updateUserInfo() {
    document.getElementById('userName').textContent = userData.name;
    document.getElementById('userBalance').textContent = userData.balance;
}

// Load games grid
function loadGames() {
    const gamesGrid = document.getElementById('gamesGrid');
    gamesGrid.innerHTML = '';

    games.forEach(game => {
        const gameCard = document.createElement('div');
        gameCard.className = 'game-card';
        gameCard.onclick = () => openGame(game);
        
        gameCard.innerHTML = `
            <div class="game-icon">${game.icon}</div>
            <h3>${game.name}</h3>
            <p>${game.description}</p>
            <div class="bonus-badge">${game.bonus}</div>
        `;
        
        gamesGrid.appendChild(gameCard);
    });
}

// Load crypto exchanges
function loadCryptoExchanges() {
    const cryptoGrid = document.getElementById('cryptoGrid');
    cryptoGrid.innerHTML = '';

    cryptoExchanges.forEach(exchange => {
        const cryptoCard = document.createElement('div');
        cryptoCard.className = 'crypto-card';
        cryptoCard.onclick = () => openCryptoExchange(exchange);
        
        cryptoCard.innerHTML = `
            <div class="crypto-icon">${exchange.icon}</div>
            <h3>${exchange.name}</h3>
            <p>${exchange.description}</p>
            <div class="bonus-badge">${exchange.bonus}</div>
        `;
        
        cryptoGrid.appendChild(cryptoCard);
    });
}

// Open game with referral
function openGame(game) {
    tg.showPopup({
        title: `–ó–∞–ø—É—Å–∫ ${game.name}`,
        message: `–í—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å: ${game.bonus}. –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ?`,
        buttons: [
            {id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞'},
            {id: 'open', type: 'default', text: '–û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É'}
        ]
    }, (buttonId) => {
        if (buttonId === 'open') {
            // In real app, this would track the click
            trackReferralClick('game', game.id);
            window.open(game.referralLink, '_blank');
        }
    });
}

// Open crypto exchange
function openCryptoExchange(exchange) {
    tg.showPopup({
        title: `–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ ${exchange.name}`,
        message: `–ë–æ–Ω—É—Å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${exchange.bonus}. –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ?`,
        buttons: [
            {id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞'},
            {id: 'open', type: 'default', text: '–û—Ç–∫—Ä—ã—Ç—å'}
        ]
    }, (buttonId) => {
        if (buttonId === 'open') {
            trackReferralClick('crypto', exchange.id);
            window.open(exchange.referralLink, '_blank');
        }
    });
}

// Copy referral link
function copyReferralLink() {
    const link = document.getElementById('referralLink').textContent;
    navigator.clipboard.writeText(link).then(() => {
        tg.showPopup({
            title: '–£—Å–ø–µ—à–Ω–æ!',
            message: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'
        });
    });
}

// Generate referral link
function generateReferralLink() {
    const baseUrl = "https://t.me/gamehub_bot?start=ref_";
    const referralLink = baseUrl + userData.id;
    document.getElementById('referralLink').textContent = referralLink;
}

// Update statistics
function updateStats() {
    document.getElementById('invitedFriends').textContent = userData.invitedFriends;
    document.getElementById('gamesPlayed').textContent = userData.gamesPlayed;
    document.getElementById('totalEarned').textContent = userData.totalEarned + ' ‚ÇΩ';
}

// Track referral clicks (mock function)
function trackReferralClick(type, id) {
    console.log(`Tracked ${type} referral click for ID: ${id}`);
    // In real app, send to analytics
}

// Section navigation
function showSection(section) {
    // Update active nav button
    document.querySelectorAll('.nav-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    event.currentTarget.classList.add('active');
    
    // In real app, implement section switching
    tg.showPopup({
        title: '–ù–∞–≤–∏–≥–∞—Ü–∏—è',
        message: `–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª: ${section}`
    });
}

// Initialize when page loads
document.addEventListener('DOMContentLoaded', initApp);
